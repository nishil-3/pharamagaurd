import json
from web3 import Web3
from hexbytes import HexBytes
ganache_url = "HTTP://127.0.0.1:7545"
web3 = Web3(Web3.HTTPProvider(ganache_url))

abi = json.loads('[{"constant":false,"inputs":[{"internalType":"uint256","name":"_medId","type":"uint256"},{"internalType":"string","name":"_date","type":"string"},{"internalType":"string","name":"_loc","type":"string"},{"internalType":"string","name":"_name","type":"string"}],"name":"addRetailer","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"_medId","type":"uint256"}],"name":"medInfo","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"string","name":"_medName","type":"string"},{"internalType":"string","name":"_mrp","type":"string"},{"internalType":"string","name":"_expiry","type":"string"},{"internalType":"string","name":"_manuDate","type":"string"}],"name":"newMed","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]')
bytecode = "608060405263075bcd1560015534801561001857600080fd5b506110ab806100286000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806318f1bd30146100465780632b84e188146100ed57806335f5a4b514610359575b600080fd5b6100726004803603602081101561005c57600080fd5b81019080803590602001909291905050506105ed565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100b2578082015181840152602081019050610097565b50505050905090810190601f1680156100df5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102de6004803603608081101561010357600080fd5b81019080803590602001909291908035906020019064010000000081111561012a57600080fd5b82018360208201111561013c57600080fd5b8035906020019184600183028401116401000000008311171561015e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156101c157600080fd5b8201836020820111156101d357600080fd5b803590602001918460018302840111640100000000831117156101f557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561025857600080fd5b82018360208201111561026a57600080fd5b8035906020019184600183028401116401000000008311171561028c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610ad6565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561031e578082015181840152602081019050610303565b50505050905090810190601f16801561034b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6105d76004803603608081101561036f57600080fd5b810190808035906020019064010000000081111561038c57600080fd5b82018360208201111561039e57600080fd5b803590602001918460018302840111640100000000831117156103c057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561042357600080fd5b82018360208201111561043557600080fd5b8035906020019184600183028401116401000000008311171561045757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156104ba57600080fd5b8201836020820111156104cc57600080fd5b803590602001918460018302840111640100000000831117156104ee57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561055157600080fd5b82018360208201111561056357600080fd5b8035906020019184600183028401116401000000008311171561058557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610c9d565b6040518082815260200191505060405180910390f35b6060806040518060400160405280600f81526020017f4d65646963696e65206e616d653a20000000000000000000000000000000000081525090506106df816000808681526020019081526020016000206002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106d55780601f106106aa576101008083540402835291602001916106d5565b820191906000526020600020905b8154815290600101906020018083116106b857829003601f168201915b5050505050610dfe565b9050610720816040518060400160405280600781526020017f20204d52503a2000000000000000000000000000000000000000000000000000815250610dfe565b90506107d9816000808681526020019081526020016000206003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107cf5780601f106107a4576101008083540402835291602001916107cf565b820191906000526020600020905b8154815290600101906020018083116107b257829003601f168201915b5050505050610dfe565b905061081a816040518060400160405280601381526020017f204d616e756661637475726520446174653a2000000000000000000000000000815250610dfe565b90506108d3816000808681526020019081526020016000206001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108c95780601f1061089e576101008083540402835291602001916108c9565b820191906000526020600020905b8154815290600101906020018083116108ac57829003601f168201915b5050505050610dfe565b9050610914816040518060400160405280600a81526020017f20204578706972793a2000000000000000000000000000000000000000000000815250610dfe565b90506109cd816000808681526020019081526020016000206004018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109c35780601f10610998576101008083540402835291602001916109c3565b820191906000526020600020905b8154815290600101906020018083116109a657829003601f168201915b5050505050610dfe565b905060008090505b60008085815260200190815260200160002060050154811015610acc57610abd8260008087815260200190815260200160002060060160008781526020019081526020016000206002018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ab35780601f10610a8857610100808354040283529160200191610ab3565b820191906000526020600020905b815481529060010190602001808311610a9657829003601f168201915b5050505050610dfe565b915080806001019150506109d5565b5080915050919050565b6060806040518060400160405280600781526020017f20444154453a20000000000000000000000000000000000000000000000000008152509050610b1b8186610dfe565b905060606040518060400160405280600c81526020017f20204c4f434154494f4e3a2000000000000000000000000000000000000000008152509050610b618282610dfe565b9150610b6d8286610dfe565b9150610b77610f47565b60405180606001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001868152602001848152509050806000808a815260200190815260200160002060060160008060008c815260200190815260200160002060050154815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019080519060200190610c49929190610f7e565b506040820151816002019080519060200190610c66929190610f7e565b5090505060008089815260200190815260200160002060050160008154809291906001019190505550829350505050949350505050565b6000610ca7610ffe565b6040518060e001604052806001548152602001848152602001878152602001868152602001858152602001600081526020013373ffffffffffffffffffffffffffffffffffffffff168152509050806000806001548152602001908152602001600020600082015181600001556020820151816001019080519060200190610d30929190610f7e565b506040820151816002019080519060200190610d4d929190610f7e565b506060820151816003019080519060200190610d6a929190610f7e565b506080820151816004019080519060200190610d87929190610f7e565b5060a0820151816005015560c08201518160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050506001600081548092919060010191905055506001805403915050949350505050565b6060808390506060839050606081518351016040519080825280601f01601f191660200182016040528015610e425781602001600182028038833980820191505090505b5090506060819050600080905060008090505b8551811015610ec357858181518110610e6a57fe5b602001015160f81c60f81b838380600101945081518110610e8757fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050610e55565b5060008090505b8451811015610f3857848181518110610edf57fe5b602001015160f81c60f81b838380600101945081518110610efc57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050610eca565b50819550505050505092915050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610fbf57805160ff1916838001178555610fed565b82800160010185558215610fed579182015b82811115610fec578251825591602001919060010190610fd1565b5b509050610ffa9190611051565b5090565b6040518060e00160405280600081526020016060815260200160608152602001606081526020016060815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b61107391905b8082111561106f576000816000905550600101611057565b5090565b9056fea265627a7a72315820f29b8377be184c43406b55701ba6b22a0a2d19b07f01fca03e6b7d72324e8d7c64736f6c63430005110032"
Med=web3.eth.contract(abi=abi,bytecode=bytecode)

web3.eth.defaultAccount = web3.eth.accounts[0]
tx1_hash = Med.constructor().transact({'from': web3.eth.defaultAccount})
tx_receipt = web3.eth.wait_for_transaction_receipt(tx1_hash)
contract = web3.eth.contract(address=tx_receipt.contractAddress, abi=abi)

def newmedd(name, mrp, expiry, manu_date):
    tx_hash = contract.functions.newMed(name, mrp, expiry, manu_date).call()

    return tx_hash


def addretailer(product_id, date, location, ret_name):
    tx_hash = contract.functions.addRetailer(
        product_id, date, location, ret_name).transact({'from': web3.eth.defaultAccount})
    return HexBytes(tx_hash).hex()
